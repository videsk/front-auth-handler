{"version":3,"sources":["webpack://WebAuth/webpack/universalModuleDefinition","webpack://WebAuth/webpack/bootstrap","webpack://WebAuth/./index.js","webpack://WebAuth/./node_modules/jwt-decode/lib/index.js","webpack://WebAuth/./node_modules/jwt-decode/lib/base64_url_decode.js","webpack://WebAuth/./node_modules/jwt-decode/lib/atob.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keys","tokens","remember","config","expired","this","access","refresh","payloads","debug","undefined","interval","execute","try","Promise","resolve","reject","Debug","getFromStorage","checkStorage","setup","then","checkExpiration","valid","pathnameObject","pathname","assign","getSearchOrHash","nestedPathname","finalObj","validateURL","url","base","checkHTTP","endpoint","result","catch","status","CheckStatus","getNewToken","e","cleanTokens","console","group","route","setItem","setPayload","createChecker","groupEnd","token","exp","Date","getTime","payload","Error","storage","localStorage","getItem","removeItem","sessionStorage","location","getPathname","split","shift","array","map","path","index","push","level","plain","byLevels","formatter","obj","parameters","includes","hash","replace","search","searchFormatter","header","Headers","headers","prefix","methods","toLowerCase","append","PayloadFetch","method","body","ParseKeysBody","fetch","response","parse","error","log","endpoints","msg","setInterval","clearInterval","expire","setTimeout","json","bodies","type","message","base64_url_decode","require","InvalidTokenError","options","pos","JSON","atob","str","output","length","decodeURIComponent","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","chars","InvalidCharacterError","input","String","bs","buffer","bc","idx","charAt","fromCharCode","indexOf"],"mappings":"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","file":"web-auth.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebAuth\"] = factory();\n\telse\n\t\troot[\"WebAuth\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*\n**  Web Auth by Videsk 2019 - Apache 2.0\n**\n**  Class for manage authorization for Rest API\n**  Check automatically expiration of JWT Token\n**  Easy access to payload of JWT\n**  Automatically use of refresh token for get a new access token\n**  JWT decode dependency\n**\n**  Github: https://github.com/videsk/front-auth-handler - NPM: https://npmjs.com/package/@videsk/front-auth-handler\n */\n\nimport jwt_decode from 'jwt-decode';\n\nmodule.exports = class WebAuth {\n\n    constructor({ keys, tokens, remember, config, expired }) {\n        this.tokens = {\n            access: (tokens && 'access' in tokens) ? tokens.access : null, // Set access token\n            refresh: (tokens && 'refresh' in tokens) ? tokens.refresh : null // Set refresh token\n        };\n        this.payloads = { access: null, refresh: null }; // Payload of access and refresh token\n        this.keys = {\n            access: (keys && 'access' in keys) ? keys.access : 'auth-key', // Key of access token for save in local or session storage\n            refresh: (keys && 'refresh' in keys) ? keys.refresh : 'auth-key-refresh' // Key of refresh token for save in local or session storage\n        };\n        this.debug = ('debug' in config && typeof config.debug === 'boolean') ? config.debug : false; // By default is false\n        this.remember = (typeof remember === 'boolean') ? remember : undefined; // By default is undefined\n        this.config = (typeof config === 'object') ? config : null; // Parameters for validate and get new token\n        this.expired = (typeof expired === 'function') ? expired : () => {}; // Handler for positive or negative result of validation\n        this.interval = { execute: null, try: 0 };\n    }\n\n    init() {\n        return new Promise((resolve, reject) => {\n            try {\n                this.Debug('info', 'Initializing WebAuth... (36)');\n                // Save access token\n                this.tokens.access = this.tokens.access || this.getFromStorage(this.keys.access);\n                // Save refresh token\n                this.tokens.refresh = this.tokens.refresh || this.getFromStorage(this.keys.refresh);\n                // Set remember\n                this.remember = (typeof this.remember === 'boolean') ? this.remember : this.checkStorage(this.keys.access).remember;\n                this.Debug('info', 'Configuration in process... (43)');\n                // Refresh or add token\n                this.setup()\n                    .then(() => {\n                        this.Debug('info', 'Checking expiration... (47)');\n                        this.checkExpiration('access')\n                          .then(valid => {\n                              this.Debug('info', 'Creating pathname object... (50)');\n                            // Get parameters\n                            const pathnameObject = { pathname: Object.assign(this.getSearchOrHash(), this.nestedPathname()) };\n                            this.Debug('info', 'Creating final object with token, payload and pathname... (53)');\n                            // base object\n                            const finalObj = { valid, tokens: this.tokens, payloads: this.payloads };\n                            // merge two obj\n                            Object.assign(finalObj, pathnameObject);\n                            this.Debug('info', `Is valid? --> ${this.validateURL()}... (59)`);\n                            // Set in constant the endpoint validate access token\n                            const { access } = (this.validateURL()) && this.config.url['endpoints'];\n                            this.Debug('info', `Checking via HTTP to ${this.config.url.base}/${access}... (67)`);\n                            // Check in backend\n                            if (this.validateURL()) this.checkHTTP({ endpoint: access })\n                                .then((result) => {\n                                    this.Debug('info', 'Finished initialization... (61)');\n                                    resolve(finalObj);\n                                    this.Debug('info', 'Returned an Object... (63)');\n                                })\n                                .catch((status) => {\n                                    this.Debug('info', 'Access token expired... (66)');\n                                    this.Debug('info', 'Trying to get a new... (67)');\n                                    if (this.CheckStatus(status) && 'refresh' in this.tokens) this.getNewToken()\n                                      .then(() => resolve())\n                                      .catch(e => reject(e));\n                                });\n                            else reject();\n                        })\n                          .catch(e => this.Debug('error', 'Error trying to get the expiration of token... (76)'))\n                    })\n                    .catch(e => {\n                        this.cleanTokens();\n                        reject(e);\n                    });\n            }\n            catch(e) {reject(e)}\n        });\n    }\n\n    setup() {\n        return new Promise((resolve, reject) => {\n            if (this.debug) console.group('Setup');\n            // Save JWT in dynamic route\n            const route = (this.remember) ? 'localStorage' : 'sessionStorage';\n            // Remove all others JWT storage\n            this.cleanTokens();\n            // Refresh or save in dynamic route\n            if (!this.tokens.access) reject('Token is not defined');\n            else {\n                this.Debug('info', `Saving access token in ${route}... (91)`);\n                // Save access token\n                window[route].setItem(this.keys.access, this.tokens.access);\n                if (this.tokens.refresh) this.Debug('info', `Saving refresh token in ${route}... (94)`);\n                // Save refresh token\n                if (this.tokens.refresh) window[route].setItem(this.keys.refresh, this.tokens.refresh);\n                // Set payload of access token\n                this.setPayload('access');\n                // Set payload of refresh token\n                if (this.tokens.access) this.setPayload('refresh');\n                /*\n                **  Here check the access token\n                **  if is expired try to use refresh token for get a new\n                **  in other case reject and execute return catch\n                */\n                // Add checker for expiration time of JWT\n                this.createChecker();\n                // Finish\n                resolve();\n            }\n            if (this.debug) console.groupEnd('Setup');\n        });\n    }\n\n    checkExpiration(token) {\n        return new Promise((resolve, reject) => {\n           try {\n               this.Debug('info', 'Checking token expiration... (125)');\n                // Set expiration time of JWT in local time\n                const expiration = this.payloads[token].exp*1000;\n                // Get local time of user\n                const today = new Date().getTime();\n                // Check if the expiration date is greater of today\n                const valid = expiration >= today;\n                this.Debug('info', `The token is ${valid}... (132)`);\n                // Return value in callback or directly\n                resolve(valid);\n           }\n           catch(e) {reject(e)};\n        });\n    }\n\n    setPayload(token) {\n        if (this.debug) console.group('Setting Payload');\n        // Error if payload isn't a object\n        const error = () => {\n            this.Debug('error', { token: this.tokens[token], payload: this.payloads[token] });\n            this.Debug('error', new Error('[Auth Web] Payload isn\\'t an object'));\n            return {};\n        };\n        this.Debug('info', 'Decoding payload of JWT... (148)');\n        // Decode JWT and get-set payload\n        const payload = jwt_decode(this.tokens[token]);\n        // Debug\n        this.Debug('info', `Return ${token} JWT... (152)`);\n        this.Debug('info', payload);\n        // Set payload\n        this.Debug('info', `Setting ${token} token... (155)`);\n        this.payloads[token] = (typeof payload === 'object') ? payload : error();\n        if (this.debug) console.groupEnd('Setting Payload');\n    }\n\n    checkStorage(key) {\n        this.Debug('info', 'Checking storage... (161)');\n        const storage = (window.localStorage.getItem(key)) ? 'localStorage' : 'sessionStorage'; // Get the store of token/refresh token\n        const remember = (storage === 'localStorage');\n        return { storage, remember };\n    }\n\n    getFromStorage(key) {\n        return window[this.checkStorage(key).storage].getItem(key);\n    }\n\n    cleanTokens() {\n        this.Debug('info', 'Cleaning tokens... (172)');\n        // Remove from localStorage\n        window.localStorage.removeItem(this.keys.access);\n        window.localStorage.removeItem(this.keys.refresh);\n        // Remove from sessionStorage\n        window.sessionStorage.removeItem(this.keys.access);\n        window.sessionStorage.removeItem(this.keys.refresh);\n    }\n\n    getPathname() {\n        return window.location.pathname; // Get the pathname\n    }\n\n    nestedPathname() {\n        if (this.debug) console.group('Parsing nested path');\n        // Get the current pathname\n        let pathname = this.getPathname();\n        // Remove the first element in array is slash\n        pathname = pathname.split('/');\n        // Remove the first empty element\n        pathname.shift();\n        // Create array with path\n        let array = [];\n        // Push elements to array\n        pathname.map((path, index) => array.push({ path: pathname[index], level: index }));\n        if (this.debug) console.groupEnd('Parsing nested path');\n        // Return array with list\n        return { plain: this.getPathname(), byLevels: array };\n    }\n\n    getSearchOrHash() {\n        if (this.debug) console.group('Getting search or hash in url');\n        // Format hash, get search parameters and return object\n        const formatter = (value) => {\n            this.Debug('info', 'Parsing URL for format... (206)');\n            // nested formatter for search parameters\n            const searchFormatter = (parameters) => {\n                this.Debug('info', 'Parsing search parameters in URL... (209)');\n                // return obj\n                const obj = {};\n                // add parameters like key and value\n                parameters.split('&').map(p => obj[p.split('=')[0]] = p.split('=')[1]);\n                // return obj\n                return obj\n            };\n            // object with all parameters of url\n            let obj = {};\n            // Get all parameters (split by ? for get all)\n            const parameters = value.split('?');\n            this.Debug('info', 'Mapping and separating hash and search parameters... (221)');\n            // map parameters and add to the correct key\n            parameters.map(p => {\n                if (p.includes('#')) obj.hash = p.replace('#', '');\n                else if (p.includes('&')) obj.search = searchFormatter(p);\n            });\n            // return obj\n            return obj;\n        };\n        // Get search parameters\n        const search = window.location.search;\n        // Get hash\n        const hash = window.location.hash;\n        if (this.debug) console.groupEnd('Getting search or hash in url');\n        // return object based on url\n        return (search) ? formatter(search) : formatter(hash);\n    }\n\n    checkHTTP({ endpoint, token = 'access' }) {\n        if (this.debug) console.group('HTTP check');\n        return new Promise((resolve, reject) => {\n            try {\n                this.Debug('info', `Checking ${token} token by HTTP request... (243)`);\n                // Validate all mandatory keys exists\n                if (this.validateURL()) {\n                    // Create a new header\n                    const header = new Headers();\n                    // Destructing object and get keys\n                    const { headers, url, prefix, methods } = this.config;\n                    // Map checker object only if exist\n                    if (headers && headers[token]) Object.keys(headers).map(key => {\n                        // Key to lower case\n                        const foo = key.toLowerCase();\n                        // check the key is not reserved\n                        if (foo !== 'authorization') header.append(key, headers[key]);\n                    });\n                    this.Debug('info', `Adding access token to header... (259)`);\n                    // Add to header objects\n                    header.append('Authorization', `${prefix || 'Bearer'} ${this.tokens['access']}`);\n                    this.Debug('info', `Fetching to ${url.base}/${endpoint}... (262)`);\n                    // Set payload\n                    const PayloadFetch = {\n                        method: (methods && methods[token]) ? methods[token] : 'POST',\n                        headers: header,\n                    };\n                    // Add body if method is POST\n                    if (PayloadFetch.method === 'POST') Object.assign(PayloadFetch, { body: this.ParseKeysBody() });\n                    // fetch to url\n                    fetch(`${url.base}/${endpoint}`, PayloadFetch)\n                        .then(response => {\n                            this.Debug('info', `Response with code ${response.status}... (270)`);\n                            // Return depending of status response\n                            if (response.status === 200 || response.status === 204) this.parse(response)\n                                .then((r) => resolve(r));\n                            else reject(response.status);\n                        })\n                        .catch((error) => {\n                            this.Debug('error', 'Something is bad, please check request in Network DevTools tab.');\n                            this.Debug('error', error);\n                        }); // Reject, is not valid or something happen with server/url\n                } else {\n                    this.Debug('info', 'Exiting HTTP validation... (272)');\n                    // Check if checker is declared like object or not backend validation\n                    if (typeof this.config.url === 'undefined') resolve(); // Not backend validation is required\n                    else reject('[Auth Web] Config dont\\'t have the correct format or url key not found.'); // Some declarations are not correct\n                }\n            } catch(e) {reject(console.log(e))}\n            if (this.debug) console.groupEnd('HTTP check');\n        });\n    }\n\n    getNewToken() {\n        return new Promise((resolve, reject) => {\n            this.Debug('info', 'Trying to get a new access token... (292)');\n            if (this.validateURL() && 'refresh' in this.tokens) {\n                // Get endpoint of refresh token\n                const {endpoints, keys} = this.config.url;\n                // Get new token if the access token expired\n                this.checkHTTP({ endpoint: endpoints.refresh, token: 'refresh' })\n                    .then((response) => {\n                        // Set new access token\n                        this.tokens.access = response[keys.access];\n                        // Setup the new token in storage\n                        this.setup()\n                            .then(() => resolve())\n                            .catch((msg) => reject(msg));\n                    })\n                    .catch((status) => reject(status));\n            } else reject(this.Debug('error', '[Auth Web] Trying to get a access token without mandatory keys.'));\n        });\n    }\n\n    createChecker() {\n        /* This function try to get new access token\n        * with the refresh token, if is exist refresh token\n        * All expires if server return error 4XX\n         */\n        this.Debug('info', 'Creating checker... (317)');\n        // Handler of JWT expiration\n        const handler = () => {\n            if (!this.checkExpiration('access') && this.interval.try <= 5) {\n                // Clear interval\n                window.clearInterval(this.interval.execute);\n                // First try to get a new access token with the refresh token\n                if (this.validateURL()\n                    && 'refresh' in this.tokens) this.getNewToken()\n                    // If the response is with 4XX Forbidden execute expired function\n                    // Else maybe the server have a bad day and need create the checker again\n                    .catch((status) => (this.CheckStatus(status)) ? this.expire() : this.createChecker(this.interval.try++));\n                // If you don't have refresh token implementation only expire token\n                else this.expire();\n            }\n            // If the server die or something goes wrong, try recursive but with 5 seconds of delay\n            else if (this.interval.try > 5) setTimeout(() => this.createChecker(this.interval.try = 0), 5000);\n        };\n        // Create interval\n        this.interval.execute = window.setInterval(handler, 1000);\n    }\n\n    validateURL() {\n        this.Debug('info', 'Validating URL key... (340)');\n        // Validate exist all keys and types of keys are correct\n        return (typeof this.config === 'object'\n            && 'url' in this.config\n            && typeof this.config.url === 'object'\n            && 'endpoints' in this.config.url\n            && typeof this.config.url['endpoints'] === 'object'\n            && 'access' in this.config.url['endpoints']);\n    }\n\n    parse(response) {\n        // Parse fetch\n        return new Promise((resolve, reject) => {\n            this.Debug('info', 'Parsing fetch response... (353)');\n           try {\n               response.json()\n               .then((r) => resolve(r, response.status))\n               .catch((e) => reject(e));\n           } catch(e) {\n               reject(e);\n           }\n        });\n    }\n\n    ParseKeysBody() {\n        const { refresh } = (this.validateURL()) ? this.config.bodies : {};\n        this.Debug('info', 'Trying to set refresh token in body... (366');\n        if (refresh) this.config.bodies.refresh[this.config.url.keys.refresh] = this.tokens.refresh;\n        return (this.validateURL()) ? this.config.bodies.refresh : {};\n    }\n\n    CheckStatus(status) {\n        this.Debug('info', 'Checking status of fetch... (361)');\n        this.Debug('info', `The status of response ${status}... (362)`);\n        const DefaultStatus = (this.validateURL() && 'status' in this.config.url) && this.config.url.status;\n        return DefaultStatus === status;\n    }\n\n    expire() {\n        this.Debug('info', 'Token has expired... (368)');\n        this.cleanTokens();\n        this.expired();\n    }\n\n    Debug(type, message) {\n        const route = (typeof type === 'string') ? type : 'info';\n        if(this.config.debug) console[route](message);\n    }\n};\n","'use strict';\n\nvar base64_url_decode = require('./base64_url_decode');\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = 'InvalidTokenError';\n\nmodule.exports = function (token,options) {\n  if (typeof token !== 'string') {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};\n\nmodule.exports.InvalidTokenError = InvalidTokenError;\n","var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill (input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n"],"sourceRoot":""}